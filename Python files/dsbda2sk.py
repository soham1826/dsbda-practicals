# -*- coding: utf-8 -*-
"""dsbda2SK.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1STeVi-_mUHVmE57Um59W9oSghFHavt0q
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

np.random.seed(42)

data = {
    "student_id":range(1,101),
    "hindi_score":np.random.randint(20,100,size=100),
    "english_score":np.random.randint(15,98,size=100),
    "science_score":np.random.randint(10,99,size=100),
    "attendance_percentage":np.random.uniform(70,100, size=100),
    "study_hours_per_day":np.random.uniform(1,6,size=100)
}

df = pd.DataFrame(data)
print("Some data\n", df.head())

#introducing inconsistancies

df.loc[10:15,"hindi_score"] = np.nan
df.loc[30:40,"english_score"] = np.nan
df.loc[50:60,"science_score"] = np.nan
df.loc[70:80,"attendance_percentage"] = np.nan

print("data after adding inconsistancies\n", df.head(20))

# handling incosistancy by replacing with mean

df.fillna(df.mean(), inplace=True)
df[df<0]=np.nan
print(df.head(20))

#using z score to identify and handle outliers

numeric_vars = ["hindi_score","english_score","science_score","attendance_percentage","study_hours_per_day",]
z_scores =(df[numeric_vars] - df[numeric_vars].mean())/df[numeric_vars].std()
outliers = (z_scores > 3) | (z_scores < -3)
df[outliers] = np.nan

print("dataset after handling outliers\n",df.head(20))

# apply data transformations

# log transformation on study hours per day to decrease skewness

df["log_study_hours"] = np.log1p(df["study_hours_per_day"])

plt.figure(figsize = (12,6))

plt.subplot(1,2,1)
sns.histplot(df["study_hours_per_day"], kde=True)
plt.title("study hours per day")

plt.subplot(1,2,2)
sns.histplot(df["log_study_hours"], kde=True)
plt.title("log_study_hours")


# -*- coding: utf-8 -*-
"""dsbda6SK.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fvAtWwyy4P7axD89IcpLrrwWClfroE7A
"""

# implement naive Bayes classification algorithm using python on iris dataset
# compute confusion matix

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, precision_score , confusion_matrix , recall_score , f1_score
from sklearn.naive_bayes import GaussianNB

# Load the Iris dataset
url = "https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv"
iris_data = pd.read_csv(url)
print(iris_data.head())

# Separate features (X) and target variable (y)
X = iris_data.iloc[:, :-1]
y = iris_data.iloc[:, -1]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = GaussianNB()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

conf_matrix = confusion_matrix(y_test, y_pred)

accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred, average='weighted')  # weighted precision for multi-class
recall = recall_score(y_test, y_pred, average='weighted')  # weighted recall for multi-class
f1 = f1_score(y_test, y_pred, average='weighted')  # weighted F1 score for multi-class

print("Confusion Matrix:")
print(conf_matrix)
print("\nAccuracy:", accuracy)
print("Precision:", precision)
print("Recall:", recall)
print("F1 Score:", f1)

